{"version":3,"sources":["apiKey.js","components/Home.js","components/Teams.js","components/Competitions.js","components/MatchTile.js","components/MatchList.js","components/Matchs.js","App.js","reportWebVitals.js","index.js"],"names":["apiKey","Home","className","to","Teams","props","useState","list","setList","useSearchParams","searchParams","setSearchParams","postQuery","get","a","getPrimaryData","data","dataSort","i","length","RegExp","test","name","push","search","strSearch","document","getElementById","value","post","useEffect","buildList","then","response","map","id","src","logo","getKey","type","placeholder","defaultValue","onClick","sessionStorage","setItem","MatchTile","homeTeamClass","awayTeamClass","dataMatch","winner","date","substring","radioSaved","competition","homeTeam","status","score","awayTeam","MatchList","navigate","useNavigate","matches","setMatches","dataSave","alert","JSON","stringify","dataMatches","saveName","parse","rTeamsMatches","rCompetitionsMatches","useMemo","getListMatches","res","dateFrom","dateTo","listMatches","Date","getTime","matchFilter","Matchs","filterParams","setFilterParams","dateFromParms","dateToParms","Number","titleName","formDateFrom","formDateTo","yearFrom","getFullYear","monthFrom","getMonth","dayFrom","getDate","yearTo","monthTo","dayTo","dateSetting","from","scrollTop","setAttribute","useParams","nameList","nameSecondList","App","countNewKey","useRef","current","rCompetitions","fetch","headers","json","competitions","returnData","iLogo","emblemUrl","area","ensignUrl","iCompetition","rTeams","teams","iTeam","crestUrl","iMatch","utcDate","fullTime","extraTime","penalties","dataNow","undefined","localStorage","dataUpdateDate","timePassed","teamsList","competitionsList","path","element","Competitions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7ddcc30e.chunk.js","sourcesContent":["export const apiKey = 'd1172b57700b4df29bba15452110f918';","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home(){\r\n        return (\r\n            <div className=\"home\">\r\n                <h1 className=\"h1Home\">\r\n                    Здесь вы можете посмотереть матчи ведущих европейских \r\n                    команд и соревнаваний. На сайте действует ограничение \r\n                    по запросам в минуту, это обусловленно ограничениями \r\n                    бесплатного api.\r\n\r\n                </h1>\r\n                <Link to=\"teams\" className=\"homeLink\">\r\n                    Список команд\r\n                </Link>\r\n                <Link to=\"competitions\" className=\"homeLink\">\r\n                    Список соревнований\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n \r\nexport default Home;","import React,{ useState, useEffect} from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n\r\nfunction Teams(props){\r\n\r\n  const [list, setList] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const postQuery = searchParams.get('post') || '';\r\n\r\n  // Сортирует список комманд/соревнований и возвращает их в массиве.\r\n  async function buildList() {\r\n    let data = await props.getPrimaryData(0);\r\n    let dataSort = [];\r\n\r\n    for (let i = 0; i < data.length; i++){\r\n      let pattern = new RegExp('\\\\b'+ postQuery, 'i')\r\n      if (pattern.test(data[i].name)) {\r\n        dataSort.push(data[i]);\r\n      };\r\n    };\r\n\r\n    return dataSort;\r\n  };\r\n\r\n  // Сохраняет паттерн поиска.\r\n  function search() {\r\n    const strSearch = document.getElementById(\"searchBlock\").value;\r\n    setSearchParams({post: strSearch});\r\n  };\r\n\r\n  useEffect(() => {\r\n    setList(<div className='spinner spinner-1'/>)\r\n    buildList().then(response => {\r\n      let data = response.map(i => \r\n        <div className='teamsLinkContainer' key={props.getKey()}>\r\n          <Link \r\n              to={`${i.id}/${i.name}`} \r\n              className=\"teamsLink\"\r\n              key={props.getKey()}\r\n          >\r\n            <img src={i.logo} className=\"logoItem\"/>\r\n            {i.name}\r\n            <div className=\"logoItem shadowLogo\"/>\r\n          </Link>\r\n        </div>\r\n        )\r\n        setList(data);\r\n      });\r\n  }, [postQuery]);\r\n\r\n  return (\r\n\r\n    <div className=\"Teams\">\r\n        <div className=\"searchBlock\">\r\n          <input\r\n            className=\"form-control searchLine\"\r\n            type=\"search\"\r\n            placeholder=\"\"\r\n            aria-label=\"Search\"\r\n            id=\"searchBlock\"\r\n            defaultValue={postQuery}\r\n          />\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-primary btn-sm buttonSearch\"\r\n            onClick={() => search()}\r\n          >\r\n            Поиск\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"\r\n              btn\r\n              btn-outline-danger\r\n              btn-sm \r\n              buttonSearch\r\n              buttonSearchDisable\r\n            \"\r\n            onClick={() => {\r\n              document.getElementById(\"searchBlock\").value = '';\r\n              search();\r\n            }}\r\n          >\r\n            Сброс\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"containerTeams\"> \r\n            <div className='teamsList'>\r\n              {list}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default Teams;","import React,{ useState, useMemo, useEffect} from 'react'\r\nimport { Link, useSearchParams } from 'react-router-dom';\r\n\r\nfunction Teams(props){\r\n\r\n  const [list, setList] = useState(null);\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const postQuery = searchParams.get('post') || '';\r\n\r\n\r\n  // Сортирует список комманд/соревнований и возвращает их в массиве.\r\n  async function buildList() {\r\n    let data = await props.getPrimaryData(1);\r\n    let dataSort = [];\r\n\r\n    for (let i = 0; i < data.length; i++){\r\n      let pattern = new RegExp('\\\\b'+ postQuery, 'i')\r\n      if (pattern.test(data[i].name)) {\r\n        dataSort.push(data[i]);\r\n      };\r\n    };\r\n\r\n    return dataSort;\r\n  };\r\n\r\n  // Сохраняет паттерн поиска.\r\n  function search() {\r\n    const strSearch = document.getElementById(\"searchBlock\").value;\r\n    setSearchParams({post: strSearch});\r\n    sessionStorage.setItem('strSearch', strSearch);\r\n  };\r\n\r\n  useEffect(() => {\r\n    buildList().then(response => {\r\n      let data = response.map(i => \r\n        <div className='teamsLinkContainer'>\r\n          <Link \r\n              to={`${i.id}/${i.name}`} \r\n              className=\"teamsLink\"\r\n              key={props.getKey()}\r\n          >\r\n            <img src={i.logo} className=\"logoItem\"/>\r\n            {i.name}\r\n            <div className=\"logoItem shadowLogo\"/>\r\n          </Link>\r\n        </div>\r\n        )\r\n        setList(data);\r\n      });\r\n  }, [postQuery]);\r\n\r\n  return (\r\n\r\n    <div className=\"Teams\">\r\n        <div className=\"searchBlock\">\r\n          <input\r\n            className=\"form-control searchLine\"\r\n            type=\"search\"\r\n            placeholder=\"\"\r\n            aria-label=\"Search\"\r\n            id=\"searchBlock\"\r\n            defaultValue={postQuery}\r\n          />\r\n          <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-primary btn-sm buttonSearch\"\r\n            onClick={() => search()}\r\n          >\r\n            Поиск\r\n          </button>\r\n          <button \r\n            type=\"button\" \r\n            className=\"\r\n              btn\r\n              btn-outline-danger\r\n              btn-sm \r\n              buttonSearch\r\n              buttonSearchDisable\r\n            \"\r\n            onClick={() => {\r\n              document.getElementById(\"searchBlock\").value = '';\r\n              search();\r\n            }}\r\n          >\r\n            Сброс\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"containerTeams\"> \r\n            <div className='teamsList'>\r\n              {list}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default Teams;","import React,{} from 'react'\r\n\r\nfunction MatchTile(props){\r\n\r\n  // Если выбрана команды то добавляет строчку с соревнованием.\r\n  function competition() {\r\n    if (props.radioSaved == '0') {\r\n      return (\r\n        <div className='competitionLine'>\r\n          {props.dataMatch.competition.name}       \r\n        </div>\r\n      );\r\n    };\r\n  };  \r\n\r\n  // Формирует строчку с очками команд. \r\n  function score()  {\r\n    if (props.dataMatch.status == 'FINISHED'){\r\n      return (\r\n        <div className='score'>\r\n          <div>{props.dataMatch.homeTeam.score}</div>\r\n          :\r\n          <div>{props.dataMatch.awayTeam.score}</div>   \r\n        </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div className='score'>\r\n          <div>-</div>\r\n          :\r\n          <div>-</div>   \r\n        </div>\r\n      );\r\n    };\r\n  };\r\n\r\n  let homeTeamClass = '';\r\n  let awayTeamClass = '';\r\n\r\n  if (props.dataMatch.winner == 'HOME_TEAM'){\r\n    homeTeamClass = 'winner';\r\n    awayTeamClass = 'loser';\r\n  }else if (props.dataMatch.winner == 'AWAY_TEAM') {\r\n    homeTeamClass = 'loser';\r\n    awayTeamClass = 'winner';\r\n  }else if (props.dataMatch.winner == 'DRAW'){\r\n    homeTeamClass = 'draw';\r\n    awayTeamClass = 'draw';\r\n  };  \r\n \r\n  return (\r\n    <div className='matchTile' >\r\n      <div className='informLine'>\r\n        <div className='pDate'>Дата проведения:</div>\r\n        {props.dataMatch.date.substring(0, 10)}\r\n      </div>\r\n\r\n      {competition()}\r\n\r\n      <div className='teamLine'>\r\n        <div className={'homeTeam ' + homeTeamClass}>\r\n          {props.dataMatch.homeTeam.name}\r\n        </div>\r\n        \r\n        {score()}\r\n\r\n        <div className={'awayTeam ' + awayTeamClass}>\r\n          {props.dataMatch.awayTeam.name}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default MatchTile;","import React, { useState, useMemo } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport MatchTile from './MatchTile';\r\n\r\nfunction MatchList(props){\r\n\r\n  const navigate = useNavigate();\r\n  const [matches, setMatches] = useState([]);\r\n\r\n  function dataSave(data) {\r\n    if (data == 'errorLimit'){\r\n      alert(\r\n        'Вы привысили предельно допустимое количество запросов в минуту. Подождите 1 минуту, затем повторите попытку.'\r\n      );\r\n      navigate(-1);\r\n    } else {\r\n      sessionStorage.setItem('dataMatches', JSON.stringify(data));\r\n    };\r\n  };\r\n\r\n  async function getListMatches() {\r\n    let dataMatches = [];\r\n\r\n    if (props.id == null) {\r\n\r\n      return null;\r\n      \r\n    } else if (sessionStorage.saveName == props.saveName) {\r\n        \r\n      dataMatches = JSON.parse(sessionStorage['dataMatches']); \r\n\r\n    } else if (props.radioSaved == 0) {\r\n\r\n      dataMatches = await props.rTeamsMatches(props.id);\r\n      dataSave(dataMatches);\r\n\r\n    } else if (props.radioSaved == 1) {\r\n\r\n      dataMatches = await props.rCompetitionsMatches(props.id);\r\n      dataSave(dataMatches);\r\n\r\n    };\r\n\r\n    return dataMatches;\r\n  };\r\n\r\n  // ------------------------------------------------------\r\n\r\n  function matchFilter(dataMatches, dateFrom, dateTo) {\r\n\r\n    if (dataMatches == null) {\r\n      setMatches([]);\r\n      return;\r\n    }else if (dataMatches == 'errorLimit') {\r\n      return;\r\n    };\r\n    \r\n    let listMatches = [];\r\n\r\n    if(dateFrom == 'Invalid Date') {\r\n      listMatches = dataMatches;\r\n    } else if(dateTo == 'Invalid Date') {\r\n      listMatches = dataMatches;\r\n    } else {\r\n      for (let i = 0; i < dataMatches.length; i++) {\r\n        const date = new Date(dataMatches[i].date);\r\n\r\n        if (date.getTime() > dateFrom.getTime()) {\r\n          if (date.getTime() < dateTo.getTime()) {\r\n            listMatches.push(dataMatches[i]);\r\n          };\r\n        };\r\n      };\r\n    };\r\n\r\n    if (listMatches.length == 0){\r\n      setMatches(\r\n        <div className='matchAlert'>\r\n          Нет информации по матчам\r\n        </div>\r\n      );\r\n    }else{\r\n      setMatches(\r\n        listMatches.map((i) => <MatchTile\r\n          key={props.getKey()} \r\n          dataMatch={i}\r\n          radioSaved={props.radioSaved}\r\n          getKey={props.getKey}\r\n        />)\r\n      );\r\n    };\r\n  };\r\n\r\n  // ------------------------------------------------------\r\n\r\n  const memo = useMemo(() => {\r\n    setMatches(<div className='spinner spinner-1'/>)\r\n    getListMatches().then(res => {\r\n      matchFilter(res, props.dateFrom, props.dateTo);\r\n      sessionStorage.setItem('saveName', props.saveName);\r\n    });\r\n  }, [props.dateTo, props.dateFrom]);\r\n\r\n  return (\r\n    <div className='containerMatchList' id='matchList'>\r\n      <div className='matchContainer'>\r\n        {matches}\r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default MatchList;","import React, { useEffect } from 'react'\r\nimport { useParams, useSearchParams  } from 'react-router-dom';\r\nimport MatchList from './MatchList';\r\n\r\nfunction Matchs(props) {\r\n\r\n  const [filterParams, setFilterParams] = useSearchParams();\r\n  let dateFromParms = filterParams.get('from') || 'Invalid Date';\r\n  let dateToParms = filterParams.get('to') || 'Invalid Date';\r\n\r\n  if (typeof dateFromParms == 'string') {\r\n    dateFromParms = new Date(Number(dateFromParms));\r\n  };\r\n  if (typeof dateToParms == 'string') {\r\n    dateToParms = new Date(Number(dateToParms));\r\n  };\r\n\r\n  let formDateFrom = '';\r\n  let formDateTo = '';\r\n  \r\n  if (dateFromParms == 'Invalid Date' || dateToParms == 'Invalid Date') {\r\n    dateFromParms = 'Invalid Date';\r\n    dateToParms = 'Invalid Date';   \r\n  }else{\r\n    dateFromParms = new Date(Number(dateFromParms));\r\n    dateToParms = new Date(Number(dateToParms));\r\n\r\n    let yearFrom = dateFromParms.getFullYear();\r\n    let monthFrom = dateFromParms.getMonth()+1;\r\n    if (monthFrom < 10) {\r\n      monthFrom = `0${monthFrom}`;\r\n    };\r\n    let dayFrom = dateFromParms.getDate();\r\n    if (dayFrom < 10) {\r\n      dayFrom = `0${dayFrom}`;\r\n    };\r\n\r\n    let yearTo = dateToParms.getFullYear();\r\n    let monthTo = dateToParms.getMonth()+1;\r\n    if (monthTo < 10) {\r\n      monthTo = `0${monthTo}`;\r\n    };\r\n    let dayTo = dateToParms.getDate();\r\n    if (dayTo < 10) {\r\n      dayTo = `0${dayTo}`;\r\n    };\r\n\r\n    formDateFrom = `${yearFrom}-${monthFrom}-${dayFrom}`;\r\n    formDateTo = `${yearTo}-${monthTo}-${dayTo}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.getElementById('dateFrom')\r\n      .setAttribute('value', formDateFrom);\r\n    document.getElementById('dateTo')\r\n      .setAttribute('value', formDateTo);\r\n  }, []);\r\n\r\n  //-----------------------------------------------------------------\r\n  \r\n  // Сохраняет фильтр по дате.\r\n  function dateSetting() {\r\n    let dateFrom = new Date(document.getElementById('dateFrom').value);  \r\n    let dateTo = new Date(document.getElementById('dateTo').value);  \r\n\r\n    if (dateFrom > dateTo){\r\n      alert('Неправильный временной промежуток');\r\n      return;\r\n    };\r\n\r\n    if (dateFrom != 'Invalid Date' && dateTo != 'Invalid Date'){\r\n      setFilterParams({\r\n          from: dateFrom.getTime(),\r\n          to: dateTo.getTime()\r\n        });\r\n      document.getElementById('matchList').scrollTop=0;\r\n      return;\r\n    };\r\n\r\n    if ((dateFrom != 'Invalid Date' || dateTo != 'Invalid Date')){\r\n      alert('Нужно установить обе даты');\r\n      return;\r\n    };\r\n  };\r\n\r\n  // Сброс фильтра по дате.\r\n  function dateSettingDefault() {\r\n    document.getElementById('dateFrom').value = 'Invalid Date';\r\n    document.getElementById('dateTo').value = 'Invalid Date';\r\n    setFilterParams({\r\n      from: 'Invalid Date',\r\n      to: 'Invalid Date'\r\n    });\r\n    dateSetting();\r\n    document.getElementById('matchList').scrollTop=0;\r\n  };\r\n\r\n  let titleName;\r\n  if (props.type == 0) {\r\n    titleName = 'Матчи команды ';\r\n  } else if (props.type == 1) {\r\n    titleName = 'Матчи соревнования ';\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='matchList'>\r\n      <div>\r\n      <div \r\n        className=\"typeMatch\"\r\n        id=\"typeMatch\"\r\n      >\r\n        {titleName}\r\n        {useParams().nameList}\r\n      </div>\r\n      <div className=\"toolBar\">\r\n        <div\r\n          className=\"filter\"\r\n        >\r\n          <div className=\"containerSearch\">\r\n            <div className=\"met\">c:</div> \r\n            <input \r\n              type=\"date\" \r\n              className=\"dateInput\" \r\n              id=\"dateFrom\"\r\n              defaultValue={formDateFrom}\r\n            />\r\n          </div>\r\n          <div className=\"containerSearch\">\r\n            <div className=\"met\">по:</div>\r\n            <input \r\n              type=\"date\" \r\n              className=\"dateInput\" \r\n              id=\"dateTo\"\r\n              defaultValue={formDateTo}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"containerSearch btnSearch\">\r\n            <button \r\n            type=\"button\" \r\n            className=\"btn btn-outline-primary buttonSearch\"\r\n            onClick={() => dateSetting()}\r\n            >\r\n              Отфильтровать\r\n            </button>\r\n            <button \r\n              type=\"button\" \r\n              className=\"buttonDanger btn btn-outline-danger\"\r\n              onClick={() => dateSettingDefault()}\r\n              >\r\n                Сброс\r\n            </button>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      \r\n      <MatchList\r\n        getKey = {props.getKey}\r\n        radioSaved = {props.type}\r\n        id = {useParams().id}\r\n        saveName = {useParams().nameList}\r\n        dateFrom = {dateFromParms}\r\n        dateTo = {dateToParms}\r\n        rCompetitionsMatches = {props.rCompetitionsMatches}\r\n        rTeamsMatches = {props.rTeamsMatches}\r\n        nameSecondList = {props.nameSecondList}\r\n        getKey = {props.getKey}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Matchs;","import React, { useRef } from 'react';\nimport { apiKey } from './apiKey';\nimport { Routes, Route, Link} from 'react-router-dom';\nimport Home from './components/Home';\nimport Teams from './components/Teams';\nimport Competitions from './components/Competitions';\nimport Matchs from './components/Matchs';\n\nfunction App() {\n\n  const countNewKey = useRef(0);\n\n  //  Возвращает уникально число. Используется для раздачи уникальных \n  // ключей.\n  function getKey() {\n    countNewKey.current++;\n    return countNewKey.current;\n  };\n\n  // ----------------------------------------------------------------\n  // Функции для работы с внешним api.\n\n  //  Запрос списка соревнаваний. Возвращает список соревнаваний\n  // в виде объекта с именем, id и эмблемой соревнавания.\n  async function rCompetitions(){\n\n    let data = await fetch('https://api.football-data.org/v2/competitions?plan=TIER_ONE', {\n      headers: {'X-Auth-Token': apiKey,}\n    }).then((response) => {\n      return response.json();\n    });\n\n    data = data.competitions\n    const returnData = [];\n    let iLogo;\n\n    for (let i =0; i < data.length; i++){\n      if (data[i].emblemUrl != null){\n        iLogo = data[i].emblemUrl;\n      }else if(data[i].area.ensignUrl != null){\n        iLogo = data[i].area.ensignUrl;\n      }else{\n        iLogo = 'https://upload.wikimedia.org/wikipedia/commons/2/2f/Flag_of_the_United_Nations.svg';\n      };\n        \n      const iCompetition = {\n        name: data[i].name,\n        id: data[i].id,\n        logo: iLogo,\n      };\n\n      returnData.push(iCompetition);\n    };\n\n    return returnData;\n  };\n\n  //  Запрос списка комманд. Возвращает список со всеми \n  // командами в виде объектов с именем, id и эмблемой.\n\n  async function rTeams(){\n    \n    let data = await fetch('https://api.football-data.org/v2/teams?plan=TIER_ONE', {\n      headers: {'X-Auth-Token': apiKey,}\n    }).then((response) => {\n      return response.json();\n    });\n    \n    data = data.teams;\n    const returnData = [];\n\n    for (let i =0; i < data.length; i++){\n      const iTeam = {\n        name: data[i].name,\n        id: data[i].id,\n        logo: data[i].crestUrl,\n      };\n\n      returnData.push(iTeam);\n    };\n\n    return returnData;\n  }\n\n  // Запрос матчей команды.\n  // Принимает id команды, возвращает массив.\n\n  async function rTeamsMatches(id){\n    \n    let data;\n    let returnData = [];\n\n    try {\n      data = await fetch(\n        `https://api.football-data.org/v2/teams/${id}/matches`, \n      {\n        headers: {'X-Auth-Token': apiKey,}\n      }).then((response) => {\n        return response.json();\n      });\n    }catch (e){\n      returnData = 'errorLimit';\n      return returnData;\n    };  \n\n    data = data.matches;\n    \n    for (let i =0; i < data.length; i++){\n      const iMatch = {\n        status: data[i].status,\n        date: data[i].utcDate,\n        winner: data[i].score.winner,\n        competition: {\n          name: data[i].competition.name,\n          id: data[i].competition.id,\n        }, \n        homeTeam: {\n          name: data[i].homeTeam.name,\n          id: data[i].homeTeam.id,\n          score: data[i].score.fullTime.homeTeam + \n            data[i].score.extraTime.homeTeam + \n            data[i].score.penalties.homeTeam,\n        },\n        awayTeam: {\n          name: data[i].awayTeam.name,\n          id: data[i].awayTeam.id,\n          score: data[i].score.fullTime.awayTeam +  \n            data[i].score.extraTime.awayTeam + \n            data[i].score.penalties.awayTeam,\n        },\n      };\n\n      returnData.push(iMatch);\n    };\n\n    return returnData;\n  };\n\n  // Запрос матчей соревнования.\n  // Принимает id соревнования, возвращает массив объектов.\n\n  async function rCompetitionsMatches(id){\n\n    let data;\n    let returnData = [];\n\n    try {\n      data = await fetch(\n        `https://api.football-data.org/v2/competitions/${id}/matches`, {\n        headers: {'X-Auth-Token': apiKey,}\n      }).then((response) => {\n        return response.json();\n      });\n    }catch (e){\n      returnData = 'errorLimit';\n      return returnData;\n    };  \n\n    data = data.matches;\n    \n\n    for (let i =0; i < data.length; i++){\n      const iMatch = {\n        status: data[i].status,\n        date: data[i].utcDate,\n        winner: data[i].score.winner,\n        competition: {\n          name: null,\n          id: null,\n        },  \n        homeTeam: {\n          name: data[i].homeTeam.name,\n          id: data[i].homeTeam.id,\n          score: data[i].score.fullTime.homeTeam + \n            data[i].score.extraTime.homeTeam + \n            data[i].score.penalties.homeTeam,\n        },\n        awayTeam: {\n          name: data[i].awayTeam.name,\n          id: data[i].awayTeam.id,\n          score: data[i].score.fullTime.awayTeam + \n            data[i].score.extraTime.awayTeam + \n            data[i].score.penalties.awayTeam,\n        },\n      };\n      \n      returnData.push(iMatch);\n    };\n\n    return returnData;\n  };\n\n  // ----------------------------------------------------------------\n\n  //  Возвращает и обновляет данные в локальном хранилище, список \n  // команд и список соревнований.\n\n  async function getPrimaryData(type) {\n\n    let teamsList;\n    let competitionsList;\n    let timePassed;\n    let dataUpdateDate;\n    let dataNow = new Date().getTime();\n\n    if (localStorage.dataUpdateDate == undefined) {\n      timePassed = 864000001;\n    } else {\n      dataUpdateDate = new Date(\n        Number(localStorage.dataUpdateDate)).getTime();\n      timePassed = dataNow - dataUpdateDate;\n    };\n\n    if (localStorage[\"teamsList\"] == undefined || \n    localStorage[\"competitionsList\"] == undefined ||\n    timePassed > 86400000) {\n\n      teamsList = await rTeams();\n      competitionsList = await rCompetitions();\n\n      localStorage.setItem(\"teamsList\", \n        JSON.stringify(teamsList));\n      localStorage.setItem(\"competitionsList\", \n        JSON.stringify(competitionsList));\n      \n      localStorage.setItem('dataUpdateDate', dataNow);\n\n    } else {\n\n      teamsList = JSON.parse(localStorage[\"teamsList\"]) ;\n      competitionsList = JSON.parse(localStorage[\"competitionsList\"]);\n    \n    };\n\n    if (type == \"0\"){\n      return teamsList;\n    }else if (type == \"1\"){\n      return competitionsList;\n    };\n  };\n\n  \n  // ----------------------------------------------------------------\n\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\n        <Link to=\"/\" className=\"headerLink nav-link\">Главная</Link>\n        <Link to=\"/teams\" className=\"headerLink nav-link\">Команды</Link>\n        <Link to=\"/competitions\" className=\"headerLink nav-link\">Соревнования</Link>\n      </nav>\n\n      <Routes>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/teams\" element={\n          <Teams\n            getPrimaryData={getPrimaryData}\n            getKey={getKey}\n          />\n        }/>\n        <Route path=\"/competitions\" element={\n          <Competitions\n            getPrimaryData={getPrimaryData}\n            getKey={getKey}\n          />\n        }/>\n        <Route path=\"/teams/:id/:nameList\" element={\n          <Matchs\n            type={0}\n            getKey = {getKey}\n            rTeamsMatches = {rTeamsMatches}\n            rCompetitionsMatches = {rCompetitionsMatches}\n          />\n        }/>\n        <Route path=\"/competitions/:id/:nameList\" element={\n          <Matchs\n            type={1}\n            getKey = {getKey}\n            rTeamsMatches = {rTeamsMatches}\n            rCompetitionsMatches = {rCompetitionsMatches}\n          />\n        }/>\n      </Routes>\n\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}